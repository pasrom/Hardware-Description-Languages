// -------------------------------------------------------------
// 
// File Name: hdlsrc/pwm_code_gen/pwm_unit.v
// Created: 2018-01-11 16:47:09
// 
// Generated by MATLAB 9.3 and HDL Coder 3.11
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 2e-08
// Target subsystem base rate: 2e-08
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        2e-08
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// cnt                           ce_out        2e-08
// pwm                           ce_out        2e-08
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: pwm_unit
// Source Path: pwm_code_gen/pwm_unit
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module pwm_unit
          (clk50m,
           rst_n,
           clk_enable,
           threshold,
           ce_out,
           cnt,
           pwm);


  input   clk50m;
  input   rst_n;
  input   clk_enable;
  input   [9:0] threshold;  // ufix10
  output  ce_out;
  output  [9:0] cnt;  // ufix10
  output  pwm;

  wire enb;
  reg [9:0] cnt_1;  // ufix10
  wire cmp_relop1;


  assign enb = clk_enable;

  // Free running, Unsigned Counter
  //  initial value   = 0
  //  step value      = 1
  always @(posedge clk50m or negedge rst_n)
    begin : counter_process
      if (rst_n == 1'b0) begin
        cnt_1 <= 10'b0000000000;
      end
      else begin
        if (enb) begin
          cnt_1 <= cnt_1 + 10'b0000000001;
        end
      end
    end



  assign cmp_relop1 = cnt_1 <= threshold;



  assign pwm = cmp_relop1;

  assign ce_out = clk_enable;

  assign cnt = cnt_1;

endmodule  // pwm_unit

